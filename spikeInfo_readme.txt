spikeWaveform_readme = ['this spikeInfo.mat file, generated ' sprintf('%s', createdDate) ', contains the following fields:' newline newline ...
                         'waveForm_all          - a (#unit) cell array. Each cell contains all the spikeband waveforms for the correspondingly indexed unit in sessUniqueUnitID' newline ...
                         'waveForm_raw_all      - a (#unit) cell array. Each cell contains all the unfiltered waveforms for the correspondingly indexed unit in sessUniqueUnitID' newline ...
                         'waveForm_sort_all     - a (#unit) cell array. Each cell contains all the whitened waveforms for the correspondingly indexed unit in sessUniqueUnitID' ];


 spikeInfo_readme = ['this spikeInfo.mat file, generated ' sprintf('%s', createdDate) ', contains the following fields:' newline newline ...
               '     createdDate          - a string indicating when this mat file was created' newline ...
               '     sessUniqueUnitID     - a ( #unit x 9 ) table. Each entry provides ID info for a unit' newline ...
               '     timeStamp            - a ( #unit ) cell array. Each cell entry contains the timestamps (in ms) for the correspondingly indexed unit in sessUniqueUnitID' newline ...
               '     waveForm             - a struct containing each units spikeband waveform mean and sd. timeMS provides an axis for plotting the waveforms.' newline ...
               '                            infoStr indicates which step in pre-processing before the clips were extracted. indexed to sessUniqueUnitID' newline ...
               '     waveForm_raw         - a struct containing each units unfiltered waveform mean and sd. timeMS provides an axis for plotting the waveforms.' newline ...
               '                            infoStr indicates which step in pre-processing before the clips were extracted. indexed to sessUniqueUnitID' newline ...
               '     waveForm_sort        - a struct containing each units whitened waveform mean and sd (this is the data actually sorted). timeMS provides an axis for plotting the waveforms.' newline ...
               '                            infoStr indicates which step in pre-processing before the clips were extracted' newline ...
               '     metrics              - a struct with metrics for each unit. check its readme' newline ...
               '     sessStr              - the session name the lfps were extracted from (e.g., 190117_1336)' newline ...
               '     sessDurMin           - session duration in minutes' newline ...
               '     startTime_datenum    - the start time of session as output from datenum function (note that these values are taken from the timestamp in the nsx filename, not the incorrectly offset time values in the original nsx file)'  newline ...
               '     extractInfoStr       - strings describing how many units were extracted from channels' newline ...
               '     pulses               - (a #nsp x 3) cell with "nspSuffix" "nsxFilename" and "pulse" struct containing 30kHz uptimes for all "ain" and "din" channels, as well as 1kHz downsampled "ain" timeseries for that NSP' newline ...
               '     alignedTo            - a string indicating which file the spikes have been aligned to' newline ...
               '     alignmentChan        - a string indicating which channel in the pulses struct was used for alignment' newline ...
               '     sort_dirname         - present to maintain consistency with JW spikeInfo. contains a filler value indicating mountainsort' newline ...
               '     sort_filenames       - present to maintain consistency with JW spikeInfo. empty' newline ...
               '     jackTableSplit       - the jacksheet containing channels that were split for sorting' newline ...
               '     jackTableUsed        - the jacksheet lines for channels that contained a unit' newline ...
               '     sortNoteTable        - present to maintain consistency with JW spikeInfo. empty' newline ...
               '     physio_nsx_postProc  - (a #nsp x 3) cell with "nspSuffix" "nsxFilename" and struct with info on how the original nsx file was modified using concatOpenNSx' ];
               
